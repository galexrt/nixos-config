# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/97821e22-0856-482c-ad3a-b49b2f1b6088";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  boot.initrd.luks = {
    devices = {
      "encd1" = {
        device = "/dev/disk/by-uuid/ae5afb64-46d4-45a7-a109-e811e2165aeb";
        allowDiscards = true;
      };
      "encd2" = {
        device = "/dev/disk/by-uuid/57f997c4-3ba8-4ade-90e8-0bc8d71f4aaa";
        allowDiscards = true;
      };
      "encd3" = {
        device = "/dev/disk/by-uuid/7c3ede2a-3ff4-4306-8654-cf363cc51fd3";
        allowDiscards = true;
      };
      "encd4" = {
        device = "/dev/disk/by-uuid/bd02fb5b-f5c6-44b8-9109-d3973f23f5d6";
        allowDiscards = true;
      };
      # Data
      "data1" = {
        device = "/dev/disk/by-uuid/88697004-5812-405a-8c6a-b102194aed25";
      };
      "data2" = {
        device = "/dev/disk/by-uuid/a0cc958f-8ba8-40d9-aa6f-87f9b4174fa0";
      };
      # SSD
      "ssd1" = {
        device = "/dev/disk/by-uuid/6b430212-aaa0-41f5-83f2-f612358969cc";
        allowDiscards = true;
      };
      "ssd2" = {
        device = "/dev/disk/by-uuid/de6ca414-d01e-40fb-ac7e-f3f34cbf6704";
        allowDiscards = true;
      };
    };
    reusePassphrases = true;
  };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/97821e22-0856-482c-ad3a-b49b2f1b6088";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" "noatime" ];
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/97821e22-0856-482c-ad3a-b49b2f1b6088";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/persist" =
    {
      device = "/dev/disk/by-uuid/97821e22-0856-482c-ad3a-b49b2f1b6088";
      fsType = "btrfs";
      options = [ "subvol=persist" "compress=zstd" "noatime" ];
    };

  fileSystems."/var/lib" =
    {
      device = "/dev/disk/by-uuid/97821e22-0856-482c-ad3a-b49b2f1b6088";
      fsType = "btrfs";
      options = [ "subvol=var-lib" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/var/log" =
    {
      device = "/dev/disk/by-uuid/97821e22-0856-482c-ad3a-b49b2f1b6088";
      fsType = "btrfs";
      options = [ "subvol=var-log" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/ECC2-7EF2";
      fsType = "vfat";
    };

  fileSystems."/data/DATA" =
    {
      device = "/dev/disk/by-uuid/7c21899a-e25e-4a9d-bdd8-ff13f2798423";
      fsType = "btrfs";
      options = [ "noatime" ];
    };

  fileSystems."/data/SSD" =
    {
      device = "/dev/disk/by-uuid/f77d0890-3357-4dba-b098-3750b5c2e370";
      fsType = "btrfs";
      options = [ "noatime" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp10s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0f1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
