# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.kernelParams = [ "amdgpu.ppfeaturemask=0xffffffff" ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/964c189b-54c1-49cd-8771-bea26cc4f618";
      fsType = "btrfs";
      options = [ "subvol=root" "noatime" ];
    };

  boot.initrd.luks = {
    devices = {
      "encs0" = {
        device = "/dev/disk/by-uuid/735b3d25-bb09-4883-aacb-1de8726cf222";
        allowDiscards = true;
      };
      "encs1" = {
        device = "/dev/disk/by-uuid/a8df07ff-e0df-4cc3-bb31-65672090a712";
        allowDiscards = true;
      };
      "encs2" = {
        device = "/dev/disk/by-uuid/3fc58292-e116-4462-b430-d28ee6944789";
        allowDiscards = true;
      };
      "encs3" = {
        device = "/dev/disk/by-uuid/6dc2dd62-777c-48c7-8bfd-f86325ffca0e";
        allowDiscards = true;
      };
      # Data
      "data1" = {
        device = "/dev/disk/by-uuid/88697004-5812-405a-8c6a-b102194aed25";
      };
      "data2" = {
        device = "/dev/disk/by-uuid/a0cc958f-8ba8-40d9-aa6f-87f9b4174fa0";
      };
    };
    reusePassphrases = true;
  };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/964c189b-54c1-49cd-8771-bea26cc4f618";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" "noatime" ];
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/964c189b-54c1-49cd-8771-bea26cc4f618";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/persist" =
    {
      device = "/dev/disk/by-uuid/964c189b-54c1-49cd-8771-bea26cc4f618";
      fsType = "btrfs";
      options = [ "subvol=persist" "compress=zstd" "noatime" ];
    };

  fileSystems."/var/lib" =
    {
      device = "/dev/disk/by-uuid/964c189b-54c1-49cd-8771-bea26cc4f618";
      fsType = "btrfs";
      options = [ "subvol=var-lib" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/var/log" =
    {
      device = "/dev/disk/by-uuid/964c189b-54c1-49cd-8771-bea26cc4f618";
      fsType = "btrfs";
      options = [ "subvol=var-log" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/C53C-21D3";
      fsType = "vfat";
      options= [ "fmask=0077" "dmask=0077" ]
    };

  fileSystems."/data/DATA" =
    {
      device = "/dev/disk/by-uuid/7c21899a-e25e-4a9d-bdd8-ff13f2798423";
      fsType = "btrfs";
      options = [ "compress=zstd" "noatime" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  #powerManagement.cpuFreqGovernor = lib.mkDefault "performance";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
